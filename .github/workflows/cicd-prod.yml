name: Build and Deploy ICPDP-EPM-BE Image for Production
on:
  push:
    branches:
      - main
  workflow_dispatch:
    
#Global Envs
env:
  #Docker
  DOCKER_IMAGE_NAME: epm-api-be
  DOCKER_IMAGE_TAG: prod

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      #Initialize code scanning on F-Code SonarQube Server
      - name: SonarQube Code Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # SonarQube will check if the code is ready for image build and push. 
      # If the code exists awful codes or vulnerabilities, this workflow will fail instantly.
      - name: SonarQube Code Quality
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to F-Code Registry
        run: |
          echo "${{ secrets.F_CODE_DOCKER_PASS }}" | docker login ${{ secrets.F_CODE_DOCKER_REGISTRY_URL}} -u ${{ secrets.F_CODE_DOCKER_USER }} --password-stdin
          docker info
      - name: Build and push the image to F-Code Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: --progress=plain
          tags: ${{ secrets.F_CODE_DOCKER_REGISTRY_URL}}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
  deploy:
    runs-on: fcode-japao-runner
    env:
      DOCKER_REGISTRY_URL: ${{secrets.F_CODE_DOCKER_REGISTRY_URL}}
      DOCKER_DB_MOUNTPOINT: ${{secrets.DOCKER_DB_MOUNT_POINT_PROD}}
      BE_EXPOSED_PORT: ${{secrets.BE_EXPOSED_PORT_PROD}}
      DB_EXPOSED_PORT: ${{secrets.DB_EXPOSED_PORT_PROD}}
      #JWT
      JWT_AT_SECRET: ${{secrets.JWT_AT_SECRET_PROD}}
      JWT_RT_SECRET: ${{secrets.JWT_RT_SECRET_PROD}}
      #Database
      DB_PASSWORD: ${{secrets.DB_PASSWORD_PROD}}
      DB_DATABASE: ${{secrets.DB_DATABASE_PROD}}
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to F-Code Registry
        run: |
          echo "${{ secrets.F_CODE_DOCKER_PASS }}" | docker login ${{ secrets.F_CODE_DOCKER_REGISTRY_URL}} -u ${{ secrets.F_CODE_DOCKER_USER }} --password-stdin
          docker info

      - name: Clean Container, Image And Prepare For Deploy
        run: docker compose -f "docker-compose-${{env.DOCKER_IMAGE_TAG}}.yaml" -p "${{ env.DOCKER_IMAGE_NAME }}-${{env.DOCKER_IMAGE_TAG}}" down --rmi all -v

      - name: Deploy FE
        run: docker compose -f "docker-compose-${{env.DOCKER_IMAGE_TAG}}.yaml" -p "${{ env.DOCKER_IMAGE_NAME }}-${{env.DOCKER_IMAGE_TAG}}" up -d

        

